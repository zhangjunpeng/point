plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'bugly'

}

bugly {
    appId = '90cff47ede' // 注册时分配的App ID
    appKey = '42889ffb-d974-4924-972c-98d2e678c64c' // 注册时分配的App Key
    upload = true
}


android {
    signingConfigs {
        debug {
            storeFile file('zjdx_point.jks')
            storePassword '123456'
            keyAlias 'zyyjy'
            keyPassword '123456'
        }
    }
    compileSdkVersion 30

    defaultConfig {
        applicationId "com.zjdx.point"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 19
        versionName "1.9"

        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        signingConfig signingConfigs.debug

        //指定room.schemaLocation生成的文件路径
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }

        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi', 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }
    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
        debug {
            signingConfig signingConfigs.debug
        }

        //自动生成指定名称的release发布版的 apk文件
        android.applicationVariants.all { variant ->
            variant.outputs.all {
                def date = new Date().format("MMdd-HHmm", TimeZone.getTimeZone("GMT+08"))
                outputFileName = "Point_${versionName}_${date}.apk"
//            }
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/atomicfu.kotlin_module'
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.annotation:annotation:1.1.0'

    // Core library
    androidTestImplementation 'androidx.test:core:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'
    // Assertions
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.ext:truth:1.3.0'


    def activityVersion = '1.1.0'
    def constraintLayoutVersion = '2.0.2'
    def coroutines = '1.3.9'
    def lifecycleVersion = '2.2.0'
    def materialVersion = '1.2.1'
    def roomVersion = '2.2.6'




    implementation "androidx.activity:activity-ktx:$activityVersion"

    // Dependencies for working with Architecture components
    // You'll probably have to update the version numbers in build.gradle (Project)

    // Room components
    implementation "androidx.room:room-ktx:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    androidTestImplementation "androidx.room:room-testing:$roomVersion"

    // Lifecycle components
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"

    // Kotlin components
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"

    // UI
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    implementation "com.google.android.material:material:$materialVersion"

    def work_version = "2.4.0"
    // Kotlin + coroutines
    implementation "androidx.work:work-runtime-ktx:$work_version"
    // optional - Test helpers
    androidTestImplementation "androidx.work:work-testing:$work_version"

    implementation 'com.squareup.okhttp3:okhttp:4.7.2'
    //高德
    implementation 'com.amap.api:location:5.2.0'
    implementation 'com.amap.api:map2d:6.0.0'

    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"


    //permissionsdispatcher
    implementation "org.permissionsdispatcher:permissionsdispatcher:4.8.0"
    kapt "org.permissionsdispatcher:permissionsdispatcher-processor:4.8.0"

    //eventbus
    implementation 'org.greenrobot:eventbus:3.2.0'

//    //moshi
//    implementation "com.squareup.moshi:moshi:1.11.0"
//    implementation "com.squareup.moshi:moshi-kotlin:1.11.0"

    //coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.1"


    implementation 'com.blankj:utilcodex:1.29.0'

    //PickerView
    implementation 'com.contrarywind:Android-PickerView:4.1.9'



    //leakcanary
//    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.6'


    implementation 'com.tencent.bugly:crashreport:3.3.3' //其中latest.release指代最新Bugly SDK版本号，也可以指定明确的版本号，例如2.2.0



}


